#include<stdio.h>
#include<conio.h>
#include<time.h>
#include<stdlib.h>
#include<dos.h>
#define max 20


int pos;
int binsearch(int,int[],int,int,int);
int linsearch(int,int[],int);

void main()
{
  int ch;
  double time_taken; 
  time_t start,end;
  int n,i,a[max],k,op,low,high,pos;
  printf("\n Enter the number of time you want to run the program:");
  scanf("%d",&ch);
  for(int j=0;j<=ch;j++)
  {
  printf("\nEnter your choice\n 1.Binary Search\n 2.Linear Search\n 3.Exit\n");
  scanf("%d",&op);

  switch(op)
  {
      case 1:printf("\nEnter the number of elements you want to enter: \n");
	     scanf("%d",&n);
	     printf("\nEnter the elements:\n");
	     for(i=0;i<n;i++)
		scanf("%d",&a[i]);
	     printf("\nEnter the element to be searched:\n");
	     scanf("%d",&k);
	     low=0;high=n-1;
	     time(&start);
	     pos=binsearch(n,a,k,low,high);
         time(&end);
	     time_taken=end-start;
	     if(pos==-1)
	       printf("\n\n Unsuccessful search");
	     else
	       printf("\n Element %d is found at position %d.",k,pos+1);
	       printf("\n Time taken is %5f CPU1 cycles\n.",time_taken);
	       getch();
	       break;
      case 2:printf("\nEnter the number of elements you want to enter:\n");
	     scanf("%d",&n);
	     printf("\nEnter the elements:\n");
	     for(i=0;i<n;i++)
		scanf("%d",&a[i]);
	      printf("\nEnter the element to be searched:\n");
	      scanf("%d",&k);
	      time(&start);
	      pos=linsearch(n,a,k);
          time(&end);
	      time_taken=end-start;
	     if(pos==-1)
		 printf("\n\n Unsuccessful search");
	     else
		 printf("\n Element %d is found at position %d",k,pos+1);
	     printf("\n Time taken is %5f CPU cycles\n",time_taken);
	     getch();
	     break;
    default:printf("\nInvalid choice entered\n");
	    exit(0);

   }
  }
  


 }

 int binsearch(int n,int a[],int k,int low,int high)
 {
  int mid;
    
    mid=(low+high)/2;
    if(low>high)
      return -1;
    if(k==a[mid])
      return(mid);
    else
     if(k<a[mid])
       return binsearch(n,a,k,low,mid-1);
     else
      return binsearch(n,a,k,mid+1,high);

  }

  int linsearch(int n,int a[],int k)
  {
     
    if(n<0)
     return -1;
    if(k==a[n-1])
      return(n-1);
     else
      return linsearch(n-1,a,k);
     
   }
